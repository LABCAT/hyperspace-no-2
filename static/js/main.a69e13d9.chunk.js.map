{"version":3,"sources":["js/helpers/Globals.js","js/functions/PlayIcon.js","js/classes/AnimatedShape.js","audio/hyperspace-no-2.ogg","audio/hyperspace-no-2.mid","js/P5SketchWithAudio.js","js/App.js","index.js"],"names":["window","p5","PlayIcon","id","className","xmlns","height","viewBox","width","d","fill","AnimatedShape","colour","size","lifetime","maxSize","this","p","innerSize","currentFrame","maxSizeReached","canDraw","setLifeTime","totalFrames","sizeIncreaser","stroke","noFill","rect","P5SketchWithAudio","sketchRef","useRef","Sketch","canvas","canvasWidth","innerWidth","canvasHeight","innerHeight","audioLoaded","player","PPQ","tempo","secondsPerBar","loadMidi","Midi","fromUrl","midi","then","result","console","log","noteSet1","tracks","notes","filter","note","includes","noteSet2","noteSet3","controlChanges","Object","assign","scheduleCueSet","keys","document","getElementById","classList","add","remove","preload","song","loadSound","audio","onended","logCredits","noteSet","callbackName","poly","lastTicks","currentCue","i","length","ticks","time","addCue","rotationOptions","currentRotation","clockwiseRotation","canRotate","setup","createCanvas","grid","createGraphics","rectMode","CENTER","angleMode","DEGREES","frameRate","strokeWeight","drawingContext","shadowBlur","shadowColor","draw","isPlaying","clear","translate","rotate","image","innerSquareColour","bassLineShapes","shape","update","drawGrid","alphaAmount","shapeSize","alphaLevel","Math","floor","root","documentElement","gridColour","getComputedStyle","getPropertyValue","gridVersion","strokeColour","color","setAlpha","line","rectSize","executeCueSet1","bassLineColour","executeCueSet2","r","random","g","b","rOptionsCopy","slice","splice","indexOf","push","gridOptions","style","setProperty","executeCueSet3","executeCueSet4","value","map","mousePressed","pause","parseInt","currentTime","buffer","duration","reset","addClass","play","creditsLogged","stop","updateCanvasDimensions","resizeCanvas","attachEvent","addEventListener","useEffect","current","ref","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a69e13d9.chunk.js","sourcesContent":["// p5.sound doesn't work correctly when p5 is not available in the global name space so we add it here\n// https://github.com/processing/p5.js-sound/issues/512\nimport * as p5 from \"p5\";\nwindow.p5 = p5;\n","export default function PlayIcon() {\n    return (\n        <svg id=\"play-icon\" className='fade-out' xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n        </svg>\n    )\n}\n","export default class AnimatedShape {\n    constructor(p5, colour, size, lifetime = 1000, maxSize = 0) {\n        this.p = p5;\n        this.colour = colour;\n        this.size = size;\n        this.innerSize = size;\n        this.currentFrame = 0;\n        this.maxSize = maxSize;\n        this.maxSizeReached = false;\n        this.canDraw = true;\n        this.setLifeTime(lifetime);\n    }\n\n    setLifeTime(lifetime) {\n        this.totalFrames = 30 * lifetime;\n        this.sizeIncreaser = (this.p.width - this.size) / this.totalFrames;\n    }\n\n    update() {\n        if(this.canDraw) {\n            this.size = this.maxSizeReached ? this.size - this.sizeIncreaser : this.size + this.sizeIncreaser;\n            this.innerSize = this.innerSize - this.sizeIncreaser;\n            this.canDraw = this.maxSize ? this.size >= 0 : this.size <= this.p.width;   \n            if(!this.maxSizeReached) {\n                this.maxSizeReached = this.maxSize && this.size >= this.maxSize;\n            }\n        }\n    }\n\n    draw() {\n        if(this.canDraw) {\n            this.p.stroke(this.colour);\n            this.p.noFill();\n            this.maxSize && this.p.fill(this.colour);\n            this.p.rect(0, 0, this.size, this.size);\n            !this.maxSize && this.p.rect(0, 0, this.innerSize, this.innerSize);\n        }\n    }\n}","export default __webpack_public_path__ + \"static/media/hyperspace-no-2.c7d7aeb5.ogg\";","export default __webpack_public_path__ + \"static/media/hyperspace-no-2.7a4b9ed1.mid\";","import React, { useRef, useEffect } from \"react\";\nimport \"./helpers/Globals\";\nimport \"p5/lib/addons/p5.sound\";\nimport * as p5 from \"p5\";\nimport { Midi } from '@tonejs/midi'\nimport PlayIcon from './functions/PlayIcon.js';\nimport AnimatedShape from './classes/AnimatedShape.js';\n\nimport audio from \"../audio/hyperspace-no-2.ogg\";\nimport midi from \"../audio/hyperspace-no-2.mid\";\n\nconst P5SketchWithAudio = () => {\n    const sketchRef = useRef();\n\n    const Sketch = p => {\n\n        p.canvas = null;\n\n        p.canvasWidth = window.innerWidth;\n\n        p.canvasHeight = window.innerHeight;\n\n        p.audioLoaded = false;\n\n        p.player = null;\n\n        p.PPQ = 3840 * 4;\n\n        p.tempo = 102;\n\n        p.secondsPerBar = 60 / p.tempo * 4;\n\n        p.loadMidi = () => {\n            Midi.fromUrl(midi).then(\n                function(result) {\n                    console.log(result);\n                    const noteSet1 = result.tracks[0].notes.filter(note => [36, 37].includes(note.midi)); // Redrum 1 - Dublab BrushKit3\n                    const noteSet2 = result.tracks[4].notes; // Maelstrom 1 - Zerolizer\n                    const noteSet3 = result.tracks[5].notes; // Maelstrom 2 - Wood Arp\n                    const controlChanges = Object.assign({},result.tracks[7].controlChanges); // Filter 1 - Maelstrom 3 - 1FingerFun\n                    p.scheduleCueSet(noteSet1, 'executeCueSet1');\n                    p.scheduleCueSet(noteSet2, 'executeCueSet2');\n                    p.scheduleCueSet(noteSet3, 'executeCueSet3');\n                    p.scheduleCueSet(controlChanges[Object.keys(controlChanges)[0]], 'executeCueSet4');\n                    document.getElementById(\"loader\").classList.add(\"loading--complete\");\n                    document.getElementById(\"play-icon\").classList.remove(\"fade-out\");\n                    p.audioLoaded = true;\n                }\n            );\n            \n        }\n\n        p.preload = () => {\n            p.song = p.loadSound(audio, p.loadMidi);\n            p.song.onended(p.logCredits);\n        }\n\n        p.scheduleCueSet = (noteSet, callbackName, poly = false)  => {\n            let lastTicks = -1,\n                currentCue = 1;\n            for (let i = 0; i < noteSet.length; i++) {\n                const note = noteSet[i],\n                    { ticks, time } = note;\n                if(ticks !== lastTicks || poly){\n                    note.currentCue = currentCue;\n                    p.song.addCue(time, p[callbackName], note);\n                    lastTicks = ticks;\n                    currentCue++;\n                }\n            }\n        } \n\n        p.rotationOptions = [0, 15, 30, 45, 60, 75];\n\n        p.currentRotation = 0;\n\n        p.clockwiseRotation = true; \n\n        p.canRotate = false;\n\n        p.setup = () => {\n            p.canvas = p.createCanvas(p.canvasWidth, p.canvasHeight);\n            p.grid = p.createGraphics(p.canvasWidth * 2, p.canvasWidth * 2);\n            p.rectMode(p.CENTER);\n            p.angleMode(p.DEGREES);\n            p.grid.rectMode(p.CENTER);\n            p.frameRate(30);\n            p.strokeWeight(8);\n            //glow\n            p.drawingContext.shadowBlur = 32;\n            p.drawingContext.shadowColor = '#00ffff';\n        }\n\n        p.draw = () => {\n            if(p.audioLoaded && p.song.isPlaying()){\n                p.clear();\n                p.translate(p.width / 2, p.height / 2);\n                p.rotate(p.currentRotation);\n                p.image(p.grid, -p.width, -p.height);\n                p.noFill();\n                if(p.innerSquareColour){\n                    p.stroke(p.innerSquareColour);\n                    p.rect(0, 0, p.width / 16, p.width / 16);\n                }\n                for (let i = 0; i < p.bassLineShapes.length; i++) {\n                    const shape = p.bassLineShapes[i];\n                    shape.draw();\n                    shape.update();\n                }\n                if(p.canRotate){\n                    p.currentRotation = p.clockwiseRotation ? p.currentRotation + 1 : p.currentRotation - 1;\n                }\n            }\n        }\n\n        p.drawGrid = (alphaAmount) => {\n            const shapeSize = p.width / 16,\n                linesPerSide = 6,\n                alphaLevel = Math.floor(alphaAmount),\n                root = document.documentElement,\n                gridColour = getComputedStyle(root).getPropertyValue(\"--grid-colour-\" + p.gridVersion),\n                strokeColour = p.color(gridColour);\n            p.drawingContext.shadowColor = gridColour;\n            p.grid.clear();\n            p.grid.strokeWeight(8);\n            p.grid.fill(27, 17, 77, alphaLevel);\n            strokeColour.setAlpha(alphaLevel)\n            p.grid.stroke(strokeColour);\n            p.grid.rect(p.width, p.height, p.width / 16, p.width / 16);\n            p.grid.noFill();\n            for (let i = 0; i < linesPerSide; i++) {\n                // //top\n                p.grid.line(\n                    p.width - shapeSize / 2 + (shapeSize / linesPerSide * i), \n                    p.height - shapeSize / 2, \n                    0 + (p.width * 2 / linesPerSide * i), \n                    p.height - p.width\n                );\n\n                //right\n                p.grid.line(\n                    p.width + shapeSize / 2, \n                    p.height - shapeSize / 2 + (shapeSize / linesPerSide * i), \n                    p.width * 2, \n                    p.height - p.width  + (p.width * 2 / linesPerSide * i)\n                );\n\n                // //bottom\n                p.grid.line(\n                    p.width + shapeSize / 2  - (shapeSize / linesPerSide * i), \n                    p.height + shapeSize / 2, \n                    p.width * 2 - (p.width * 2 / linesPerSide * i),\n                    p.height + p.width\n                );\n\n                //left\n                p.grid.line(\n                    p.width - shapeSize / 2, \n                    p.height + shapeSize / 2 - (shapeSize / linesPerSide * i), \n                    0, \n                    p.height + p.width - (p.width * 2 / linesPerSide * i)\n                );\n            }\n            \n            for (let i = 0; i < 48; i++) {\n                const rectSize = p.width / 16 + (p.width / 32 * i); \n                p.grid.rect(p.width, p.height, rectSize, rectSize);\n            }\n        }\n\n        p.innerSquareColour = false;\n\n        p.executeCueSet1 = (note) => {\n            const { midi } = note;\n            p.innerSquareColour = midi === 36 ? p.color('#1B114D') : p.color('#ff0cb8');\n        }\n\n        p.bassLineColour = p.color('#f7de74');\n\n        p.bassLineShapes = [];\n\n        p.gridVersion = 1;\n\n        p.executeCueSet2 = (note) => {\n            const { currentCue } = note;\n            const r = p.random(255),\n                g = p.random(255),\n                b = p.random(255),\n                rOptionsCopy = p.rotationOptions.slice();\n            rOptionsCopy.splice(p.rotationOptions.indexOf(p.currentRotation), 1)\n            p.currentRotation = p.random(rOptionsCopy);\n            p.canRotate = Math.random() < 0.5;\n            p.clockwiseRotation = Math.random() < 0.5;\n            p.bassLineColour = p.color(r, g, b);\n            p.bassLineShapes.push(\n                new AnimatedShape(\n                    p,\n                    p.color(r, g, b, 127),\n                    p.width / 16, \n                    p.secondsPerBar / 2,\n                    p.width / 16 + p.width / 8,\n                )\n            );\n            \n            if(currentCue % 6 === 1) {\n                const root = document.documentElement,\n                    gridOptions = [1,2,3,4,5,6];\n                gridOptions.splice(p.gridVersion - 1, 1);\n                p.gridVersion= p.random(gridOptions);\n                root.style.setProperty(\"--canvas-bg\", \"var(--bg-gradient-\" + p.gridVersion + ')');\n                p.drawGrid();\n            }\n        }\n\n        p.executeCueSet3 = (note) => {\n            p.bassLineShapes.push(\n                new AnimatedShape(\n                    p,\n                    p.bassLineColour,\n                    p.width / 16, \n                    p.secondsPerBar / 2\n                )\n            );\n        }\n\n        p.executeCueSet4 = (note) => {\n            const { value } = note,\n                alphaLevel = p.map(value, 0.49, 1, 0, 255);\n            if(value < 1) {\n                p.drawGrid(alphaLevel);\n            }\n        }\n\n        p.mousePressed = () => {\n            if(p.audioLoaded){\n                if (p.song.isPlaying()) {\n                    p.song.pause();\n                } else {\n                    if (parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)) {\n                        p.reset();\n                    }\n                    document.getElementById(\"play-icon\").classList.add(\"fade-out\");\n                    p.canvas.addClass(\"fade-in\");\n                    p.song.play();\n                }\n            }\n        }\n\n        p.creditsLogged = false;\n\n        p.logCredits = () => {\n            if (\n                !p.creditsLogged &&\n                parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)\n            ) {\n                p.creditsLogged = true;\n                    console.log(\n                    \"Music By: http://labcat.nz/\",\n                    \"\\n\",\n                    \"Animation By: https://github.com/LABCAT/\"\n                );\n                p.song.stop();\n            }\n        };\n\n        p.reset = () => {\n\n        }\n\n        p.updateCanvasDimensions = () => {\n            p.canvasWidth = window.innerWidth;\n            p.canvasHeight = window.innerHeight;\n            p.canvas = p.resizeCanvas(p.canvasWidth, p.canvasHeight);\n        }\n\n        if (window.attachEvent) {\n            window.attachEvent(\n                'onresize',\n                function () {\n                    p.updateCanvasDimensions();\n                }\n            );\n        }\n        else if (window.addEventListener) {\n            window.addEventListener(\n                'resize',\n                function () {\n                    p.updateCanvasDimensions();\n                },\n                true\n            );\n        }\n        else {\n            //The browser does not support Javascript event binding\n        }\n    };\n\n    useEffect(() => {\n        new p5(Sketch, sketchRef.current);\n    }, []);\n\n    return (\n        <div ref={sketchRef}>\n            <PlayIcon />\n        </div>\n    );\n};\n\nexport default P5SketchWithAudio;\n","import P5SketchWithAudio from './P5SketchWithAudio'\n\nfunction App() {\n  return (\n    <P5SketchWithAudio/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/build.css';\nimport App from './js/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}